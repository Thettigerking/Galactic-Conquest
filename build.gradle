plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version

    // Force LWJGL version
    configurations.configureEach {
        resolutionStrategy {
            force "org.lwjgl:lwjgl-stb:${lwjgl_version}"
            force "org.lwjgl:lwjgl-opengl:${lwjgl_version}"
            force "org.lwjgl:lwjgl-openal:${lwjgl_version}"
            force "org.lwjgl:lwjgl-tinyfd:${lwjgl_version}"
            force "org.lwjgl:lwjgl-jemalloc:${lwjgl_version}"
            force "org.lwjgl:lwjgl-glfw:${lwjgl_version}"
            force "org.lwjgl:lwjgl:${lwjgl_version}"

            force "io.github.llamalad7:mixinextras-common:${mixin_extras_version}"
            force "io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"
            force "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"
        }
    }

    repositories {
        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
        }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven {
            name = 'Mixin Squared'
            url = "https://jitpack.io"
        }
        maven {
            name = 'Conditional Mixins'
            url 'https://maven.fallenbreath.me/releases'
            content {
                includeGroup "me.fallenbreath"
            }
        }
        maven {
            name = 'Kotlin for Forge'
            url = 'https://thedarkcolour.github.io/KotlinForForge/'
            content { includeGroup "thedarkcolour" }
        }
        // VS2
        maven {
            name = "Valkyrien Skies Internal"
            url = "https://maven.valkyrienskies.org"
        }
        maven {
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup("maven.modrinth")
            }
        }
        // Cardinal Components (for Gravity API on fabric)
        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }
        // Do a Barrel Roll
        maven { url = "https://maven.enjarai.dev/releases" }
        maven { url = "https://maven.enjarai.dev/mirrors" }
        // Permissions API (dependency of Do a Barrel Roll)
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
        // YACL (dependency of Do a Barrel Roll)
        maven { url = "https://maven.isxander.dev/releases" }
        // Cloth Config
        maven { url = "https://maven.shedaniel.me/" }
        maven { url = "https://maven.terraformersmc.com/releases/" }
        // LDLib, Photon, Shimmer
        maven { url = "https://maven.firstdarkdev.xyz/snapshots" }

        maven { url = 'https://jitpack.io' }
    }

    // Make YACL use a version of imageio that can be found
    configurations.all {
        resolutionStrategy {
            force(
                "com.twelvemonkeys.imageio:imageio-core:3.12.1-SNAPSHOT",
                "com.twelvemonkeys.imageio:imageio-webp:3.12.1-SNAPSHOT",
                "com.twelvemonkeys.imageio:imageio-metadata:3.12.1-SNAPSHOT",
                "com.twelvemonkeys.common:common-lang:3.12.1-SNAPSHOT",
                "com.twelvemonkeys.common:common-io:3.12.1-SNAPSHOT",
                "com.twelvemonkeys.common:common-image:3.12.1-SNAPSHOT"
            )
        }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:2023.09.03@zip")
        }

        // VS2: JOML is required
        implementation("org.joml:joml:1.10.4") { transitive = false }
        implementation("org.joml:joml-primitives:1.10.0") { transitive = false }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
